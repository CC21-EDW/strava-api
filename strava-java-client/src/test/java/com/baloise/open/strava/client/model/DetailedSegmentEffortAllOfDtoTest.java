/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baloise.open.strava.client.model;

import com.baloise.open.strava.client.model.MetaActivityDto;
import com.baloise.open.strava.client.model.MetaAthleteDto;
import com.baloise.open.strava.client.model.SummarySegmentDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for DetailedSegmentEffortAllOfDto
 */
public class DetailedSegmentEffortAllOfDtoTest {
    private final DetailedSegmentEffortAllOfDto model = new DetailedSegmentEffortAllOfDto();

    /**
     * Model tests for DetailedSegmentEffortAllOfDto
     */
    @Test
    public void testDetailedSegmentEffortAllOfDto() {
        // TODO: test DetailedSegmentEffortAllOfDto
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'activity'
     */
    @Test
    public void activityTest() {
        // TODO: test activity
    }

    /**
     * Test the property 'athlete'
     */
    @Test
    public void athleteTest() {
        // TODO: test athlete
    }

    /**
     * Test the property 'movingTime'
     */
    @Test
    public void movingTimeTest() {
        // TODO: test movingTime
    }

    /**
     * Test the property 'startIndex'
     */
    @Test
    public void startIndexTest() {
        // TODO: test startIndex
    }

    /**
     * Test the property 'endIndex'
     */
    @Test
    public void endIndexTest() {
        // TODO: test endIndex
    }

    /**
     * Test the property 'averageCadence'
     */
    @Test
    public void averageCadenceTest() {
        // TODO: test averageCadence
    }

    /**
     * Test the property 'averageWatts'
     */
    @Test
    public void averageWattsTest() {
        // TODO: test averageWatts
    }

    /**
     * Test the property 'deviceWatts'
     */
    @Test
    public void deviceWattsTest() {
        // TODO: test deviceWatts
    }

    /**
     * Test the property 'averageHeartrate'
     */
    @Test
    public void averageHeartrateTest() {
        // TODO: test averageHeartrate
    }

    /**
     * Test the property 'maxHeartrate'
     */
    @Test
    public void maxHeartrateTest() {
        // TODO: test maxHeartrate
    }

    /**
     * Test the property 'segment'
     */
    @Test
    public void segmentTest() {
        // TODO: test segment
    }

    /**
     * Test the property 'komRank'
     */
    @Test
    public void komRankTest() {
        // TODO: test komRank
    }

    /**
     * Test the property 'prRank'
     */
    @Test
    public void prRankTest() {
        // TODO: test prRank
    }

    /**
     * Test the property 'hidden'
     */
    @Test
    public void hiddenTest() {
        // TODO: test hidden
    }

}
