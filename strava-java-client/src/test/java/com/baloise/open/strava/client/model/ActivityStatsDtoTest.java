/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baloise.open.strava.client.model;

import com.baloise.open.strava.client.model.ActivityTotalDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ActivityStatsDto
 */
public class ActivityStatsDtoTest {
    private final ActivityStatsDto model = new ActivityStatsDto();

    /**
     * Model tests for ActivityStatsDto
     */
    @Test
    public void testActivityStatsDto() {
        // TODO: test ActivityStatsDto
    }

    /**
     * Test the property 'biggestRideDistance'
     */
    @Test
    public void biggestRideDistanceTest() {
        // TODO: test biggestRideDistance
    }

    /**
     * Test the property 'biggestClimbElevationGain'
     */
    @Test
    public void biggestClimbElevationGainTest() {
        // TODO: test biggestClimbElevationGain
    }

    /**
     * Test the property 'recentRideTotals'
     */
    @Test
    public void recentRideTotalsTest() {
        // TODO: test recentRideTotals
    }

    /**
     * Test the property 'recentRunTotals'
     */
    @Test
    public void recentRunTotalsTest() {
        // TODO: test recentRunTotals
    }

    /**
     * Test the property 'recentSwimTotals'
     */
    @Test
    public void recentSwimTotalsTest() {
        // TODO: test recentSwimTotals
    }

    /**
     * Test the property 'ytdRideTotals'
     */
    @Test
    public void ytdRideTotalsTest() {
        // TODO: test ytdRideTotals
    }

    /**
     * Test the property 'ytdRunTotals'
     */
    @Test
    public void ytdRunTotalsTest() {
        // TODO: test ytdRunTotals
    }

    /**
     * Test the property 'ytdSwimTotals'
     */
    @Test
    public void ytdSwimTotalsTest() {
        // TODO: test ytdSwimTotals
    }

    /**
     * Test the property 'allRideTotals'
     */
    @Test
    public void allRideTotalsTest() {
        // TODO: test allRideTotals
    }

    /**
     * Test the property 'allRunTotals'
     */
    @Test
    public void allRunTotalsTest() {
        // TODO: test allRunTotals
    }

    /**
     * Test the property 'allSwimTotals'
     */
    @Test
    public void allSwimTotalsTest() {
        // TODO: test allSwimTotals
    }

}
