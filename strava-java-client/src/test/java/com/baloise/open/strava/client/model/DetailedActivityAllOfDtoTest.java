/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baloise.open.strava.client.model;

import com.baloise.open.strava.client.model.DetailedSegmentEffortDto;
import com.baloise.open.strava.client.model.LapDto;
import com.baloise.open.strava.client.model.PhotosSummaryDto;
import com.baloise.open.strava.client.model.SplitDto;
import com.baloise.open.strava.client.model.SummaryGearDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for DetailedActivityAllOfDto
 */
public class DetailedActivityAllOfDtoTest {
    private final DetailedActivityAllOfDto model = new DetailedActivityAllOfDto();

    /**
     * Model tests for DetailedActivityAllOfDto
     */
    @Test
    public void testDetailedActivityAllOfDto() {
        // TODO: test DetailedActivityAllOfDto
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'photos'
     */
    @Test
    public void photosTest() {
        // TODO: test photos
    }

    /**
     * Test the property 'gear'
     */
    @Test
    public void gearTest() {
        // TODO: test gear
    }

    /**
     * Test the property 'calories'
     */
    @Test
    public void caloriesTest() {
        // TODO: test calories
    }

    /**
     * Test the property 'segmentEfforts'
     */
    @Test
    public void segmentEffortsTest() {
        // TODO: test segmentEfforts
    }

    /**
     * Test the property 'deviceName'
     */
    @Test
    public void deviceNameTest() {
        // TODO: test deviceName
    }

    /**
     * Test the property 'embedToken'
     */
    @Test
    public void embedTokenTest() {
        // TODO: test embedToken
    }

    /**
     * Test the property 'splitsMetric'
     */
    @Test
    public void splitsMetricTest() {
        // TODO: test splitsMetric
    }

    /**
     * Test the property 'splitsStandard'
     */
    @Test
    public void splitsStandardTest() {
        // TODO: test splitsStandard
    }

    /**
     * Test the property 'laps'
     */
    @Test
    public void lapsTest() {
        // TODO: test laps
    }

    /**
     * Test the property 'bestEfforts'
     */
    @Test
    public void bestEffortsTest() {
        // TODO: test bestEfforts
    }

}
