/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baloise.open.strava.client.model;

import com.baloise.open.strava.client.model.DetailedAthleteAllOfDto;
import com.baloise.open.strava.client.model.SummaryAthleteDto;
import com.baloise.open.strava.client.model.SummaryClubDto;
import com.baloise.open.strava.client.model.SummaryGearDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for DetailedAthleteDto
 */
public class DetailedAthleteDtoTest {
    private final DetailedAthleteDto model = new DetailedAthleteDto();

    /**
     * Model tests for DetailedAthleteDto
     */
    @Test
    public void testDetailedAthleteDto() {
        // TODO: test DetailedAthleteDto
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'resourceState'
     */
    @Test
    public void resourceStateTest() {
        // TODO: test resourceState
    }

    /**
     * Test the property 'firstname'
     */
    @Test
    public void firstnameTest() {
        // TODO: test firstname
    }

    /**
     * Test the property 'lastname'
     */
    @Test
    public void lastnameTest() {
        // TODO: test lastname
    }

    /**
     * Test the property 'profileMedium'
     */
    @Test
    public void profileMediumTest() {
        // TODO: test profileMedium
    }

    /**
     * Test the property 'profile'
     */
    @Test
    public void profileTest() {
        // TODO: test profile
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'sex'
     */
    @Test
    public void sexTest() {
        // TODO: test sex
    }

    /**
     * Test the property 'premium'
     */
    @Test
    public void premiumTest() {
        // TODO: test premium
    }

    /**
     * Test the property 'summit'
     */
    @Test
    public void summitTest() {
        // TODO: test summit
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'followerCount'
     */
    @Test
    public void followerCountTest() {
        // TODO: test followerCount
    }

    /**
     * Test the property 'friendCount'
     */
    @Test
    public void friendCountTest() {
        // TODO: test friendCount
    }

    /**
     * Test the property 'measurementPreference'
     */
    @Test
    public void measurementPreferenceTest() {
        // TODO: test measurementPreference
    }

    /**
     * Test the property 'ftp'
     */
    @Test
    public void ftpTest() {
        // TODO: test ftp
    }

    /**
     * Test the property 'weight'
     */
    @Test
    public void weightTest() {
        // TODO: test weight
    }

    /**
     * Test the property 'clubs'
     */
    @Test
    public void clubsTest() {
        // TODO: test clubs
    }

    /**
     * Test the property 'bikes'
     */
    @Test
    public void bikesTest() {
        // TODO: test bikes
    }

    /**
     * Test the property 'shoes'
     */
    @Test
    public void shoesTest() {
        // TODO: test shoes
    }

}
