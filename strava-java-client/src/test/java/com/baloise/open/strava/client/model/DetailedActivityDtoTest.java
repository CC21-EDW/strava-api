/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baloise.open.strava.client.model;

import com.baloise.open.strava.client.model.ActivityTypeDto;
import com.baloise.open.strava.client.model.DetailedActivityAllOfDto;
import com.baloise.open.strava.client.model.DetailedSegmentEffortDto;
import com.baloise.open.strava.client.model.LapDto;
import com.baloise.open.strava.client.model.MetaAthleteDto;
import com.baloise.open.strava.client.model.PhotosSummaryDto;
import com.baloise.open.strava.client.model.PolylineMapDto;
import com.baloise.open.strava.client.model.SplitDto;
import com.baloise.open.strava.client.model.SummaryActivityDto;
import com.baloise.open.strava.client.model.SummaryGearDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for DetailedActivityDto
 */
public class DetailedActivityDtoTest {
    private final DetailedActivityDto model = new DetailedActivityDto();

    /**
     * Model tests for DetailedActivityDto
     */
    @Test
    public void testDetailedActivityDto() {
        // TODO: test DetailedActivityDto
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'uploadId'
     */
    @Test
    public void uploadIdTest() {
        // TODO: test uploadId
    }

    /**
     * Test the property 'athlete'
     */
    @Test
    public void athleteTest() {
        // TODO: test athlete
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'distance'
     */
    @Test
    public void distanceTest() {
        // TODO: test distance
    }

    /**
     * Test the property 'movingTime'
     */
    @Test
    public void movingTimeTest() {
        // TODO: test movingTime
    }

    /**
     * Test the property 'elapsedTime'
     */
    @Test
    public void elapsedTimeTest() {
        // TODO: test elapsedTime
    }

    /**
     * Test the property 'totalElevationGain'
     */
    @Test
    public void totalElevationGainTest() {
        // TODO: test totalElevationGain
    }

    /**
     * Test the property 'elevHigh'
     */
    @Test
    public void elevHighTest() {
        // TODO: test elevHigh
    }

    /**
     * Test the property 'elevLow'
     */
    @Test
    public void elevLowTest() {
        // TODO: test elevLow
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'startDate'
     */
    @Test
    public void startDateTest() {
        // TODO: test startDate
    }

    /**
     * Test the property 'startDateLocal'
     */
    @Test
    public void startDateLocalTest() {
        // TODO: test startDateLocal
    }

    /**
     * Test the property 'timezone'
     */
    @Test
    public void timezoneTest() {
        // TODO: test timezone
    }

    /**
     * Test the property 'startLatlng'
     */
    @Test
    public void startLatlngTest() {
        // TODO: test startLatlng
    }

    /**
     * Test the property 'endLatlng'
     */
    @Test
    public void endLatlngTest() {
        // TODO: test endLatlng
    }

    /**
     * Test the property 'achievementCount'
     */
    @Test
    public void achievementCountTest() {
        // TODO: test achievementCount
    }

    /**
     * Test the property 'kudosCount'
     */
    @Test
    public void kudosCountTest() {
        // TODO: test kudosCount
    }

    /**
     * Test the property 'commentCount'
     */
    @Test
    public void commentCountTest() {
        // TODO: test commentCount
    }

    /**
     * Test the property 'athleteCount'
     */
    @Test
    public void athleteCountTest() {
        // TODO: test athleteCount
    }

    /**
     * Test the property 'photoCount'
     */
    @Test
    public void photoCountTest() {
        // TODO: test photoCount
    }

    /**
     * Test the property 'totalPhotoCount'
     */
    @Test
    public void totalPhotoCountTest() {
        // TODO: test totalPhotoCount
    }

    /**
     * Test the property 'map'
     */
    @Test
    public void mapTest() {
        // TODO: test map
    }

    /**
     * Test the property 'trainer'
     */
    @Test
    public void trainerTest() {
        // TODO: test trainer
    }

    /**
     * Test the property 'commute'
     */
    @Test
    public void commuteTest() {
        // TODO: test commute
    }

    /**
     * Test the property 'manual'
     */
    @Test
    public void manualTest() {
        // TODO: test manual
    }

    /**
     * Test the property '_private'
     */
    @Test
    public void _privateTest() {
        // TODO: test _private
    }

    /**
     * Test the property 'flagged'
     */
    @Test
    public void flaggedTest() {
        // TODO: test flagged
    }

    /**
     * Test the property 'workoutType'
     */
    @Test
    public void workoutTypeTest() {
        // TODO: test workoutType
    }

    /**
     * Test the property 'uploadIdStr'
     */
    @Test
    public void uploadIdStrTest() {
        // TODO: test uploadIdStr
    }

    /**
     * Test the property 'averageSpeed'
     */
    @Test
    public void averageSpeedTest() {
        // TODO: test averageSpeed
    }

    /**
     * Test the property 'maxSpeed'
     */
    @Test
    public void maxSpeedTest() {
        // TODO: test maxSpeed
    }

    /**
     * Test the property 'hasKudoed'
     */
    @Test
    public void hasKudoedTest() {
        // TODO: test hasKudoed
    }

    /**
     * Test the property 'hideFromHome'
     */
    @Test
    public void hideFromHomeTest() {
        // TODO: test hideFromHome
    }

    /**
     * Test the property 'gearId'
     */
    @Test
    public void gearIdTest() {
        // TODO: test gearId
    }

    /**
     * Test the property 'kilojoules'
     */
    @Test
    public void kilojoulesTest() {
        // TODO: test kilojoules
    }

    /**
     * Test the property 'averageWatts'
     */
    @Test
    public void averageWattsTest() {
        // TODO: test averageWatts
    }

    /**
     * Test the property 'deviceWatts'
     */
    @Test
    public void deviceWattsTest() {
        // TODO: test deviceWatts
    }

    /**
     * Test the property 'maxWatts'
     */
    @Test
    public void maxWattsTest() {
        // TODO: test maxWatts
    }

    /**
     * Test the property 'weightedAverageWatts'
     */
    @Test
    public void weightedAverageWattsTest() {
        // TODO: test weightedAverageWatts
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'photos'
     */
    @Test
    public void photosTest() {
        // TODO: test photos
    }

    /**
     * Test the property 'gear'
     */
    @Test
    public void gearTest() {
        // TODO: test gear
    }

    /**
     * Test the property 'calories'
     */
    @Test
    public void caloriesTest() {
        // TODO: test calories
    }

    /**
     * Test the property 'segmentEfforts'
     */
    @Test
    public void segmentEffortsTest() {
        // TODO: test segmentEfforts
    }

    /**
     * Test the property 'deviceName'
     */
    @Test
    public void deviceNameTest() {
        // TODO: test deviceName
    }

    /**
     * Test the property 'embedToken'
     */
    @Test
    public void embedTokenTest() {
        // TODO: test embedToken
    }

    /**
     * Test the property 'splitsMetric'
     */
    @Test
    public void splitsMetricTest() {
        // TODO: test splitsMetric
    }

    /**
     * Test the property 'splitsStandard'
     */
    @Test
    public void splitsStandardTest() {
        // TODO: test splitsStandard
    }

    /**
     * Test the property 'laps'
     */
    @Test
    public void lapsTest() {
        // TODO: test laps
    }

    /**
     * Test the property 'bestEfforts'
     */
    @Test
    public void bestEffortsTest() {
        // TODO: test bestEfforts
    }

}
