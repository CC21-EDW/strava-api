/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baloise.open.strava.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.baloise.open.strava.client.model.ActivityTotalDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * A set of rolled-up statistics and totals for an athlete
 */
@ApiModel(description = "A set of rolled-up statistics and totals for an athlete")
@JsonPropertyOrder({
  ActivityStatsDto.JSON_PROPERTY_BIGGEST_RIDE_DISTANCE,
  ActivityStatsDto.JSON_PROPERTY_BIGGEST_CLIMB_ELEVATION_GAIN,
  ActivityStatsDto.JSON_PROPERTY_RECENT_RIDE_TOTALS,
  ActivityStatsDto.JSON_PROPERTY_RECENT_RUN_TOTALS,
  ActivityStatsDto.JSON_PROPERTY_RECENT_SWIM_TOTALS,
  ActivityStatsDto.JSON_PROPERTY_YTD_RIDE_TOTALS,
  ActivityStatsDto.JSON_PROPERTY_YTD_RUN_TOTALS,
  ActivityStatsDto.JSON_PROPERTY_YTD_SWIM_TOTALS,
  ActivityStatsDto.JSON_PROPERTY_ALL_RIDE_TOTALS,
  ActivityStatsDto.JSON_PROPERTY_ALL_RUN_TOTALS,
  ActivityStatsDto.JSON_PROPERTY_ALL_SWIM_TOTALS
})
@JsonTypeName("ActivityStats")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-30T10:08:10.913426500+01:00[Europe/Zurich]")
public class ActivityStatsDto {
  public static final String JSON_PROPERTY_BIGGEST_RIDE_DISTANCE = "biggest_ride_distance";
  private Double biggestRideDistance;

  public static final String JSON_PROPERTY_BIGGEST_CLIMB_ELEVATION_GAIN = "biggest_climb_elevation_gain";
  private Double biggestClimbElevationGain;

  public static final String JSON_PROPERTY_RECENT_RIDE_TOTALS = "recent_ride_totals";
  private ActivityTotalDto recentRideTotals;

  public static final String JSON_PROPERTY_RECENT_RUN_TOTALS = "recent_run_totals";
  private ActivityTotalDto recentRunTotals;

  public static final String JSON_PROPERTY_RECENT_SWIM_TOTALS = "recent_swim_totals";
  private ActivityTotalDto recentSwimTotals;

  public static final String JSON_PROPERTY_YTD_RIDE_TOTALS = "ytd_ride_totals";
  private ActivityTotalDto ytdRideTotals;

  public static final String JSON_PROPERTY_YTD_RUN_TOTALS = "ytd_run_totals";
  private ActivityTotalDto ytdRunTotals;

  public static final String JSON_PROPERTY_YTD_SWIM_TOTALS = "ytd_swim_totals";
  private ActivityTotalDto ytdSwimTotals;

  public static final String JSON_PROPERTY_ALL_RIDE_TOTALS = "all_ride_totals";
  private ActivityTotalDto allRideTotals;

  public static final String JSON_PROPERTY_ALL_RUN_TOTALS = "all_run_totals";
  private ActivityTotalDto allRunTotals;

  public static final String JSON_PROPERTY_ALL_SWIM_TOTALS = "all_swim_totals";
  private ActivityTotalDto allSwimTotals;


  public ActivityStatsDto biggestRideDistance(Double biggestRideDistance) {
    
    this.biggestRideDistance = biggestRideDistance;
    return this;
  }

   /**
   * The longest distance ridden by the athlete.
   * @return biggestRideDistance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The longest distance ridden by the athlete.")
  @JsonProperty(JSON_PROPERTY_BIGGEST_RIDE_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getBiggestRideDistance() {
    return biggestRideDistance;
  }


  public void setBiggestRideDistance(Double biggestRideDistance) {
    this.biggestRideDistance = biggestRideDistance;
  }


  public ActivityStatsDto biggestClimbElevationGain(Double biggestClimbElevationGain) {
    
    this.biggestClimbElevationGain = biggestClimbElevationGain;
    return this;
  }

   /**
   * The highest climb ridden by the athlete.
   * @return biggestClimbElevationGain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The highest climb ridden by the athlete.")
  @JsonProperty(JSON_PROPERTY_BIGGEST_CLIMB_ELEVATION_GAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getBiggestClimbElevationGain() {
    return biggestClimbElevationGain;
  }


  public void setBiggestClimbElevationGain(Double biggestClimbElevationGain) {
    this.biggestClimbElevationGain = biggestClimbElevationGain;
  }


  public ActivityStatsDto recentRideTotals(ActivityTotalDto recentRideTotals) {
    
    this.recentRideTotals = recentRideTotals;
    return this;
  }

   /**
   * Get recentRideTotals
   * @return recentRideTotals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RECENT_RIDE_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActivityTotalDto getRecentRideTotals() {
    return recentRideTotals;
  }


  public void setRecentRideTotals(ActivityTotalDto recentRideTotals) {
    this.recentRideTotals = recentRideTotals;
  }


  public ActivityStatsDto recentRunTotals(ActivityTotalDto recentRunTotals) {
    
    this.recentRunTotals = recentRunTotals;
    return this;
  }

   /**
   * Get recentRunTotals
   * @return recentRunTotals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RECENT_RUN_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActivityTotalDto getRecentRunTotals() {
    return recentRunTotals;
  }


  public void setRecentRunTotals(ActivityTotalDto recentRunTotals) {
    this.recentRunTotals = recentRunTotals;
  }


  public ActivityStatsDto recentSwimTotals(ActivityTotalDto recentSwimTotals) {
    
    this.recentSwimTotals = recentSwimTotals;
    return this;
  }

   /**
   * Get recentSwimTotals
   * @return recentSwimTotals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RECENT_SWIM_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActivityTotalDto getRecentSwimTotals() {
    return recentSwimTotals;
  }


  public void setRecentSwimTotals(ActivityTotalDto recentSwimTotals) {
    this.recentSwimTotals = recentSwimTotals;
  }


  public ActivityStatsDto ytdRideTotals(ActivityTotalDto ytdRideTotals) {
    
    this.ytdRideTotals = ytdRideTotals;
    return this;
  }

   /**
   * Get ytdRideTotals
   * @return ytdRideTotals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_YTD_RIDE_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActivityTotalDto getYtdRideTotals() {
    return ytdRideTotals;
  }


  public void setYtdRideTotals(ActivityTotalDto ytdRideTotals) {
    this.ytdRideTotals = ytdRideTotals;
  }


  public ActivityStatsDto ytdRunTotals(ActivityTotalDto ytdRunTotals) {
    
    this.ytdRunTotals = ytdRunTotals;
    return this;
  }

   /**
   * Get ytdRunTotals
   * @return ytdRunTotals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_YTD_RUN_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActivityTotalDto getYtdRunTotals() {
    return ytdRunTotals;
  }


  public void setYtdRunTotals(ActivityTotalDto ytdRunTotals) {
    this.ytdRunTotals = ytdRunTotals;
  }


  public ActivityStatsDto ytdSwimTotals(ActivityTotalDto ytdSwimTotals) {
    
    this.ytdSwimTotals = ytdSwimTotals;
    return this;
  }

   /**
   * Get ytdSwimTotals
   * @return ytdSwimTotals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_YTD_SWIM_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActivityTotalDto getYtdSwimTotals() {
    return ytdSwimTotals;
  }


  public void setYtdSwimTotals(ActivityTotalDto ytdSwimTotals) {
    this.ytdSwimTotals = ytdSwimTotals;
  }


  public ActivityStatsDto allRideTotals(ActivityTotalDto allRideTotals) {
    
    this.allRideTotals = allRideTotals;
    return this;
  }

   /**
   * Get allRideTotals
   * @return allRideTotals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ALL_RIDE_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActivityTotalDto getAllRideTotals() {
    return allRideTotals;
  }


  public void setAllRideTotals(ActivityTotalDto allRideTotals) {
    this.allRideTotals = allRideTotals;
  }


  public ActivityStatsDto allRunTotals(ActivityTotalDto allRunTotals) {
    
    this.allRunTotals = allRunTotals;
    return this;
  }

   /**
   * Get allRunTotals
   * @return allRunTotals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ALL_RUN_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActivityTotalDto getAllRunTotals() {
    return allRunTotals;
  }


  public void setAllRunTotals(ActivityTotalDto allRunTotals) {
    this.allRunTotals = allRunTotals;
  }


  public ActivityStatsDto allSwimTotals(ActivityTotalDto allSwimTotals) {
    
    this.allSwimTotals = allSwimTotals;
    return this;
  }

   /**
   * Get allSwimTotals
   * @return allSwimTotals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ALL_SWIM_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActivityTotalDto getAllSwimTotals() {
    return allSwimTotals;
  }


  public void setAllSwimTotals(ActivityTotalDto allSwimTotals) {
    this.allSwimTotals = allSwimTotals;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivityStatsDto activityStats = (ActivityStatsDto) o;
    return Objects.equals(this.biggestRideDistance, activityStats.biggestRideDistance) &&
        Objects.equals(this.biggestClimbElevationGain, activityStats.biggestClimbElevationGain) &&
        Objects.equals(this.recentRideTotals, activityStats.recentRideTotals) &&
        Objects.equals(this.recentRunTotals, activityStats.recentRunTotals) &&
        Objects.equals(this.recentSwimTotals, activityStats.recentSwimTotals) &&
        Objects.equals(this.ytdRideTotals, activityStats.ytdRideTotals) &&
        Objects.equals(this.ytdRunTotals, activityStats.ytdRunTotals) &&
        Objects.equals(this.ytdSwimTotals, activityStats.ytdSwimTotals) &&
        Objects.equals(this.allRideTotals, activityStats.allRideTotals) &&
        Objects.equals(this.allRunTotals, activityStats.allRunTotals) &&
        Objects.equals(this.allSwimTotals, activityStats.allSwimTotals);
  }

  @Override
  public int hashCode() {
    return Objects.hash(biggestRideDistance, biggestClimbElevationGain, recentRideTotals, recentRunTotals, recentSwimTotals, ytdRideTotals, ytdRunTotals, ytdSwimTotals, allRideTotals, allRunTotals, allSwimTotals);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivityStatsDto {\n");
    sb.append("    biggestRideDistance: ").append(toIndentedString(biggestRideDistance)).append("\n");
    sb.append("    biggestClimbElevationGain: ").append(toIndentedString(biggestClimbElevationGain)).append("\n");
    sb.append("    recentRideTotals: ").append(toIndentedString(recentRideTotals)).append("\n");
    sb.append("    recentRunTotals: ").append(toIndentedString(recentRunTotals)).append("\n");
    sb.append("    recentSwimTotals: ").append(toIndentedString(recentSwimTotals)).append("\n");
    sb.append("    ytdRideTotals: ").append(toIndentedString(ytdRideTotals)).append("\n");
    sb.append("    ytdRunTotals: ").append(toIndentedString(ytdRunTotals)).append("\n");
    sb.append("    ytdSwimTotals: ").append(toIndentedString(ytdSwimTotals)).append("\n");
    sb.append("    allRideTotals: ").append(toIndentedString(allRideTotals)).append("\n");
    sb.append("    allRunTotals: ").append(toIndentedString(allRunTotals)).append("\n");
    sb.append("    allSwimTotals: ").append(toIndentedString(allSwimTotals)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

