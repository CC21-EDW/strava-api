/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baloise.open.strava.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.baloise.open.strava.client.model.ActivityTypeDto;
import com.baloise.open.strava.client.model.DetailedActivityAllOfDto;
import com.baloise.open.strava.client.model.DetailedSegmentEffortDto;
import com.baloise.open.strava.client.model.LapDto;
import com.baloise.open.strava.client.model.MetaAthleteDto;
import com.baloise.open.strava.client.model.PhotosSummaryDto;
import com.baloise.open.strava.client.model.PolylineMapDto;
import com.baloise.open.strava.client.model.SplitDto;
import com.baloise.open.strava.client.model.SummaryActivityDto;
import com.baloise.open.strava.client.model.SummaryGearDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * DetailedActivityDto
 */
@JsonPropertyOrder({
  DetailedActivityDto.JSON_PROPERTY_ID,
  DetailedActivityDto.JSON_PROPERTY_EXTERNAL_ID,
  DetailedActivityDto.JSON_PROPERTY_UPLOAD_ID,
  DetailedActivityDto.JSON_PROPERTY_ATHLETE,
  DetailedActivityDto.JSON_PROPERTY_NAME,
  DetailedActivityDto.JSON_PROPERTY_DISTANCE,
  DetailedActivityDto.JSON_PROPERTY_MOVING_TIME,
  DetailedActivityDto.JSON_PROPERTY_ELAPSED_TIME,
  DetailedActivityDto.JSON_PROPERTY_TOTAL_ELEVATION_GAIN,
  DetailedActivityDto.JSON_PROPERTY_ELEV_HIGH,
  DetailedActivityDto.JSON_PROPERTY_ELEV_LOW,
  DetailedActivityDto.JSON_PROPERTY_TYPE,
  DetailedActivityDto.JSON_PROPERTY_START_DATE,
  DetailedActivityDto.JSON_PROPERTY_START_DATE_LOCAL,
  DetailedActivityDto.JSON_PROPERTY_TIMEZONE,
  DetailedActivityDto.JSON_PROPERTY_START_LATLNG,
  DetailedActivityDto.JSON_PROPERTY_END_LATLNG,
  DetailedActivityDto.JSON_PROPERTY_ACHIEVEMENT_COUNT,
  DetailedActivityDto.JSON_PROPERTY_KUDOS_COUNT,
  DetailedActivityDto.JSON_PROPERTY_COMMENT_COUNT,
  DetailedActivityDto.JSON_PROPERTY_ATHLETE_COUNT,
  DetailedActivityDto.JSON_PROPERTY_PHOTO_COUNT,
  DetailedActivityDto.JSON_PROPERTY_TOTAL_PHOTO_COUNT,
  DetailedActivityDto.JSON_PROPERTY_MAP,
  DetailedActivityDto.JSON_PROPERTY_TRAINER,
  DetailedActivityDto.JSON_PROPERTY_COMMUTE,
  DetailedActivityDto.JSON_PROPERTY_MANUAL,
  DetailedActivityDto.JSON_PROPERTY_PRIVATE,
  DetailedActivityDto.JSON_PROPERTY_FLAGGED,
  DetailedActivityDto.JSON_PROPERTY_WORKOUT_TYPE,
  DetailedActivityDto.JSON_PROPERTY_UPLOAD_ID_STR,
  DetailedActivityDto.JSON_PROPERTY_AVERAGE_SPEED,
  DetailedActivityDto.JSON_PROPERTY_MAX_SPEED,
  DetailedActivityDto.JSON_PROPERTY_HAS_KUDOED,
  DetailedActivityDto.JSON_PROPERTY_HIDE_FROM_HOME,
  DetailedActivityDto.JSON_PROPERTY_GEAR_ID,
  DetailedActivityDto.JSON_PROPERTY_KILOJOULES,
  DetailedActivityDto.JSON_PROPERTY_AVERAGE_WATTS,
  DetailedActivityDto.JSON_PROPERTY_DEVICE_WATTS,
  DetailedActivityDto.JSON_PROPERTY_MAX_WATTS,
  DetailedActivityDto.JSON_PROPERTY_WEIGHTED_AVERAGE_WATTS,
  DetailedActivityDto.JSON_PROPERTY_DESCRIPTION,
  DetailedActivityDto.JSON_PROPERTY_PHOTOS,
  DetailedActivityDto.JSON_PROPERTY_GEAR,
  DetailedActivityDto.JSON_PROPERTY_CALORIES,
  DetailedActivityDto.JSON_PROPERTY_SEGMENT_EFFORTS,
  DetailedActivityDto.JSON_PROPERTY_DEVICE_NAME,
  DetailedActivityDto.JSON_PROPERTY_EMBED_TOKEN,
  DetailedActivityDto.JSON_PROPERTY_SPLITS_METRIC,
  DetailedActivityDto.JSON_PROPERTY_SPLITS_STANDARD,
  DetailedActivityDto.JSON_PROPERTY_LAPS,
  DetailedActivityDto.JSON_PROPERTY_BEST_EFFORTS
})
@JsonTypeName("DetailedActivity")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-30T10:08:10.913426500+01:00[Europe/Zurich]")
public class DetailedActivityDto {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_EXTERNAL_ID = "external_id";
  private String externalId;

  public static final String JSON_PROPERTY_UPLOAD_ID = "upload_id";
  private Long uploadId;

  public static final String JSON_PROPERTY_ATHLETE = "athlete";
  private MetaAthleteDto athlete;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DISTANCE = "distance";
  private Float distance;

  public static final String JSON_PROPERTY_MOVING_TIME = "moving_time";
  private Integer movingTime;

  public static final String JSON_PROPERTY_ELAPSED_TIME = "elapsed_time";
  private Integer elapsedTime;

  public static final String JSON_PROPERTY_TOTAL_ELEVATION_GAIN = "total_elevation_gain";
  private Float totalElevationGain;

  public static final String JSON_PROPERTY_ELEV_HIGH = "elev_high";
  private Float elevHigh;

  public static final String JSON_PROPERTY_ELEV_LOW = "elev_low";
  private Float elevLow;

  public static final String JSON_PROPERTY_TYPE = "type";
  private ActivityTypeDto type;

  public static final String JSON_PROPERTY_START_DATE = "start_date";
  private OffsetDateTime startDate;

  public static final String JSON_PROPERTY_START_DATE_LOCAL = "start_date_local";
  private OffsetDateTime startDateLocal;

  public static final String JSON_PROPERTY_TIMEZONE = "timezone";
  private String timezone;

  public static final String JSON_PROPERTY_START_LATLNG = "start_latlng";
  private List<Float> startLatlng = null;

  public static final String JSON_PROPERTY_END_LATLNG = "end_latlng";
  private List<Float> endLatlng = null;

  public static final String JSON_PROPERTY_ACHIEVEMENT_COUNT = "achievement_count";
  private Integer achievementCount;

  public static final String JSON_PROPERTY_KUDOS_COUNT = "kudos_count";
  private Integer kudosCount;

  public static final String JSON_PROPERTY_COMMENT_COUNT = "comment_count";
  private Integer commentCount;

  public static final String JSON_PROPERTY_ATHLETE_COUNT = "athlete_count";
  private Integer athleteCount;

  public static final String JSON_PROPERTY_PHOTO_COUNT = "photo_count";
  private Integer photoCount;

  public static final String JSON_PROPERTY_TOTAL_PHOTO_COUNT = "total_photo_count";
  private Integer totalPhotoCount;

  public static final String JSON_PROPERTY_MAP = "map";
  private PolylineMapDto map;

  public static final String JSON_PROPERTY_TRAINER = "trainer";
  private Boolean trainer;

  public static final String JSON_PROPERTY_COMMUTE = "commute";
  private Boolean commute;

  public static final String JSON_PROPERTY_MANUAL = "manual";
  private Boolean manual;

  public static final String JSON_PROPERTY_PRIVATE = "private";
  private Boolean _private;

  public static final String JSON_PROPERTY_FLAGGED = "flagged";
  private Boolean flagged;

  public static final String JSON_PROPERTY_WORKOUT_TYPE = "workout_type";
  private Integer workoutType;

  public static final String JSON_PROPERTY_UPLOAD_ID_STR = "upload_id_str";
  private String uploadIdStr;

  public static final String JSON_PROPERTY_AVERAGE_SPEED = "average_speed";
  private Float averageSpeed;

  public static final String JSON_PROPERTY_MAX_SPEED = "max_speed";
  private Float maxSpeed;

  public static final String JSON_PROPERTY_HAS_KUDOED = "has_kudoed";
  private Boolean hasKudoed;

  public static final String JSON_PROPERTY_HIDE_FROM_HOME = "hide_from_home";
  private Boolean hideFromHome;

  public static final String JSON_PROPERTY_GEAR_ID = "gear_id";
  private String gearId;

  public static final String JSON_PROPERTY_KILOJOULES = "kilojoules";
  private Float kilojoules;

  public static final String JSON_PROPERTY_AVERAGE_WATTS = "average_watts";
  private Float averageWatts;

  public static final String JSON_PROPERTY_DEVICE_WATTS = "device_watts";
  private Boolean deviceWatts;

  public static final String JSON_PROPERTY_MAX_WATTS = "max_watts";
  private Integer maxWatts;

  public static final String JSON_PROPERTY_WEIGHTED_AVERAGE_WATTS = "weighted_average_watts";
  private Integer weightedAverageWatts;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_PHOTOS = "photos";
  private PhotosSummaryDto photos;

  public static final String JSON_PROPERTY_GEAR = "gear";
  private SummaryGearDto gear;

  public static final String JSON_PROPERTY_CALORIES = "calories";
  private Float calories;

  public static final String JSON_PROPERTY_SEGMENT_EFFORTS = "segment_efforts";
  private List<DetailedSegmentEffortDto> segmentEfforts = null;

  public static final String JSON_PROPERTY_DEVICE_NAME = "device_name";
  private String deviceName;

  public static final String JSON_PROPERTY_EMBED_TOKEN = "embed_token";
  private String embedToken;

  public static final String JSON_PROPERTY_SPLITS_METRIC = "splits_metric";
  private List<SplitDto> splitsMetric = null;

  public static final String JSON_PROPERTY_SPLITS_STANDARD = "splits_standard";
  private List<SplitDto> splitsStandard = null;

  public static final String JSON_PROPERTY_LAPS = "laps";
  private List<LapDto> laps = null;

  public static final String JSON_PROPERTY_BEST_EFFORTS = "best_efforts";
  private List<DetailedSegmentEffortDto> bestEfforts = null;


  public DetailedActivityDto id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * The unique identifier of the activity
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier of the activity")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public DetailedActivityDto externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * The identifier provided at upload time
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identifier provided at upload time")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public DetailedActivityDto uploadId(Long uploadId) {
    
    this.uploadId = uploadId;
    return this;
  }

   /**
   * The identifier of the upload that resulted in this activity
   * @return uploadId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identifier of the upload that resulted in this activity")
  @JsonProperty(JSON_PROPERTY_UPLOAD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getUploadId() {
    return uploadId;
  }


  public void setUploadId(Long uploadId) {
    this.uploadId = uploadId;
  }


  public DetailedActivityDto athlete(MetaAthleteDto athlete) {
    
    this.athlete = athlete;
    return this;
  }

   /**
   * Get athlete
   * @return athlete
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ATHLETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MetaAthleteDto getAthlete() {
    return athlete;
  }


  public void setAthlete(MetaAthleteDto athlete) {
    this.athlete = athlete;
  }


  public DetailedActivityDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the activity
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the activity")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public DetailedActivityDto distance(Float distance) {
    
    this.distance = distance;
    return this;
  }

   /**
   * The activity&#39;s distance, in meters
   * @return distance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The activity's distance, in meters")
  @JsonProperty(JSON_PROPERTY_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getDistance() {
    return distance;
  }


  public void setDistance(Float distance) {
    this.distance = distance;
  }


  public DetailedActivityDto movingTime(Integer movingTime) {
    
    this.movingTime = movingTime;
    return this;
  }

   /**
   * The activity&#39;s moving time, in seconds
   * @return movingTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The activity's moving time, in seconds")
  @JsonProperty(JSON_PROPERTY_MOVING_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMovingTime() {
    return movingTime;
  }


  public void setMovingTime(Integer movingTime) {
    this.movingTime = movingTime;
  }


  public DetailedActivityDto elapsedTime(Integer elapsedTime) {
    
    this.elapsedTime = elapsedTime;
    return this;
  }

   /**
   * The activity&#39;s elapsed time, in seconds
   * @return elapsedTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The activity's elapsed time, in seconds")
  @JsonProperty(JSON_PROPERTY_ELAPSED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getElapsedTime() {
    return elapsedTime;
  }


  public void setElapsedTime(Integer elapsedTime) {
    this.elapsedTime = elapsedTime;
  }


  public DetailedActivityDto totalElevationGain(Float totalElevationGain) {
    
    this.totalElevationGain = totalElevationGain;
    return this;
  }

   /**
   * The activity&#39;s total elevation gain.
   * @return totalElevationGain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The activity's total elevation gain.")
  @JsonProperty(JSON_PROPERTY_TOTAL_ELEVATION_GAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getTotalElevationGain() {
    return totalElevationGain;
  }


  public void setTotalElevationGain(Float totalElevationGain) {
    this.totalElevationGain = totalElevationGain;
  }


  public DetailedActivityDto elevHigh(Float elevHigh) {
    
    this.elevHigh = elevHigh;
    return this;
  }

   /**
   * The activity&#39;s highest elevation, in meters
   * @return elevHigh
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The activity's highest elevation, in meters")
  @JsonProperty(JSON_PROPERTY_ELEV_HIGH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getElevHigh() {
    return elevHigh;
  }


  public void setElevHigh(Float elevHigh) {
    this.elevHigh = elevHigh;
  }


  public DetailedActivityDto elevLow(Float elevLow) {
    
    this.elevLow = elevLow;
    return this;
  }

   /**
   * The activity&#39;s lowest elevation, in meters
   * @return elevLow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The activity's lowest elevation, in meters")
  @JsonProperty(JSON_PROPERTY_ELEV_LOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getElevLow() {
    return elevLow;
  }


  public void setElevLow(Float elevLow) {
    this.elevLow = elevLow;
  }


  public DetailedActivityDto type(ActivityTypeDto type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActivityTypeDto getType() {
    return type;
  }


  public void setType(ActivityTypeDto type) {
    this.type = type;
  }


  public DetailedActivityDto startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * The time at which the activity was started.
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time at which the activity was started.")
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public DetailedActivityDto startDateLocal(OffsetDateTime startDateLocal) {
    
    this.startDateLocal = startDateLocal;
    return this;
  }

   /**
   * The time at which the activity was started in the local timezone.
   * @return startDateLocal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time at which the activity was started in the local timezone.")
  @JsonProperty(JSON_PROPERTY_START_DATE_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartDateLocal() {
    return startDateLocal;
  }


  public void setStartDateLocal(OffsetDateTime startDateLocal) {
    this.startDateLocal = startDateLocal;
  }


  public DetailedActivityDto timezone(String timezone) {
    
    this.timezone = timezone;
    return this;
  }

   /**
   * The timezone of the activity
   * @return timezone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timezone of the activity")
  @JsonProperty(JSON_PROPERTY_TIMEZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimezone() {
    return timezone;
  }


  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  public DetailedActivityDto startLatlng(List<Float> startLatlng) {
    
    this.startLatlng = startLatlng;
    return this;
  }

  public DetailedActivityDto addStartLatlngItem(Float startLatlngItem) {
    if (this.startLatlng == null) {
      this.startLatlng = new ArrayList<>();
    }
    this.startLatlng.add(startLatlngItem);
    return this;
  }

   /**
   * A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers.
   * @return startLatlng
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers.")
  @JsonProperty(JSON_PROPERTY_START_LATLNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Float> getStartLatlng() {
    return startLatlng;
  }


  public void setStartLatlng(List<Float> startLatlng) {
    this.startLatlng = startLatlng;
  }


  public DetailedActivityDto endLatlng(List<Float> endLatlng) {
    
    this.endLatlng = endLatlng;
    return this;
  }

  public DetailedActivityDto addEndLatlngItem(Float endLatlngItem) {
    if (this.endLatlng == null) {
      this.endLatlng = new ArrayList<>();
    }
    this.endLatlng.add(endLatlngItem);
    return this;
  }

   /**
   * A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers.
   * @return endLatlng
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers.")
  @JsonProperty(JSON_PROPERTY_END_LATLNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Float> getEndLatlng() {
    return endLatlng;
  }


  public void setEndLatlng(List<Float> endLatlng) {
    this.endLatlng = endLatlng;
  }


  public DetailedActivityDto achievementCount(Integer achievementCount) {
    
    this.achievementCount = achievementCount;
    return this;
  }

   /**
   * The number of achievements gained during this activity
   * @return achievementCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of achievements gained during this activity")
  @JsonProperty(JSON_PROPERTY_ACHIEVEMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAchievementCount() {
    return achievementCount;
  }


  public void setAchievementCount(Integer achievementCount) {
    this.achievementCount = achievementCount;
  }


  public DetailedActivityDto kudosCount(Integer kudosCount) {
    
    this.kudosCount = kudosCount;
    return this;
  }

   /**
   * The number of kudos given for this activity
   * @return kudosCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of kudos given for this activity")
  @JsonProperty(JSON_PROPERTY_KUDOS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getKudosCount() {
    return kudosCount;
  }


  public void setKudosCount(Integer kudosCount) {
    this.kudosCount = kudosCount;
  }


  public DetailedActivityDto commentCount(Integer commentCount) {
    
    this.commentCount = commentCount;
    return this;
  }

   /**
   * The number of comments for this activity
   * @return commentCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of comments for this activity")
  @JsonProperty(JSON_PROPERTY_COMMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCommentCount() {
    return commentCount;
  }


  public void setCommentCount(Integer commentCount) {
    this.commentCount = commentCount;
  }


  public DetailedActivityDto athleteCount(Integer athleteCount) {
    
    this.athleteCount = athleteCount;
    return this;
  }

   /**
   * The number of athletes for taking part in a group activity
   * minimum: 1
   * @return athleteCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of athletes for taking part in a group activity")
  @JsonProperty(JSON_PROPERTY_ATHLETE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAthleteCount() {
    return athleteCount;
  }


  public void setAthleteCount(Integer athleteCount) {
    this.athleteCount = athleteCount;
  }


  public DetailedActivityDto photoCount(Integer photoCount) {
    
    this.photoCount = photoCount;
    return this;
  }

   /**
   * The number of Instagram photos for this activity
   * @return photoCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of Instagram photos for this activity")
  @JsonProperty(JSON_PROPERTY_PHOTO_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPhotoCount() {
    return photoCount;
  }


  public void setPhotoCount(Integer photoCount) {
    this.photoCount = photoCount;
  }


  public DetailedActivityDto totalPhotoCount(Integer totalPhotoCount) {
    
    this.totalPhotoCount = totalPhotoCount;
    return this;
  }

   /**
   * The number of Instagram and Strava photos for this activity
   * @return totalPhotoCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of Instagram and Strava photos for this activity")
  @JsonProperty(JSON_PROPERTY_TOTAL_PHOTO_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalPhotoCount() {
    return totalPhotoCount;
  }


  public void setTotalPhotoCount(Integer totalPhotoCount) {
    this.totalPhotoCount = totalPhotoCount;
  }


  public DetailedActivityDto map(PolylineMapDto map) {
    
    this.map = map;
    return this;
  }

   /**
   * Get map
   * @return map
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PolylineMapDto getMap() {
    return map;
  }


  public void setMap(PolylineMapDto map) {
    this.map = map;
  }


  public DetailedActivityDto trainer(Boolean trainer) {
    
    this.trainer = trainer;
    return this;
  }

   /**
   * Whether this activity was recorded on a training machine
   * @return trainer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether this activity was recorded on a training machine")
  @JsonProperty(JSON_PROPERTY_TRAINER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTrainer() {
    return trainer;
  }


  public void setTrainer(Boolean trainer) {
    this.trainer = trainer;
  }


  public DetailedActivityDto commute(Boolean commute) {
    
    this.commute = commute;
    return this;
  }

   /**
   * Whether this activity is a commute
   * @return commute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether this activity is a commute")
  @JsonProperty(JSON_PROPERTY_COMMUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCommute() {
    return commute;
  }


  public void setCommute(Boolean commute) {
    this.commute = commute;
  }


  public DetailedActivityDto manual(Boolean manual) {
    
    this.manual = manual;
    return this;
  }

   /**
   * Whether this activity was created manually
   * @return manual
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether this activity was created manually")
  @JsonProperty(JSON_PROPERTY_MANUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getManual() {
    return manual;
  }


  public void setManual(Boolean manual) {
    this.manual = manual;
  }


  public DetailedActivityDto _private(Boolean _private) {
    
    this._private = _private;
    return this;
  }

   /**
   * Whether this activity is private
   * @return _private
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether this activity is private")
  @JsonProperty(JSON_PROPERTY_PRIVATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPrivate() {
    return _private;
  }


  public void setPrivate(Boolean _private) {
    this._private = _private;
  }


  public DetailedActivityDto flagged(Boolean flagged) {
    
    this.flagged = flagged;
    return this;
  }

   /**
   * Whether this activity is flagged
   * @return flagged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether this activity is flagged")
  @JsonProperty(JSON_PROPERTY_FLAGGED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFlagged() {
    return flagged;
  }


  public void setFlagged(Boolean flagged) {
    this.flagged = flagged;
  }


  public DetailedActivityDto workoutType(Integer workoutType) {
    
    this.workoutType = workoutType;
    return this;
  }

   /**
   * The activity&#39;s workout type
   * @return workoutType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The activity's workout type")
  @JsonProperty(JSON_PROPERTY_WORKOUT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWorkoutType() {
    return workoutType;
  }


  public void setWorkoutType(Integer workoutType) {
    this.workoutType = workoutType;
  }


  public DetailedActivityDto uploadIdStr(String uploadIdStr) {
    
    this.uploadIdStr = uploadIdStr;
    return this;
  }

   /**
   * The unique identifier of the upload in string format
   * @return uploadIdStr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier of the upload in string format")
  @JsonProperty(JSON_PROPERTY_UPLOAD_ID_STR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUploadIdStr() {
    return uploadIdStr;
  }


  public void setUploadIdStr(String uploadIdStr) {
    this.uploadIdStr = uploadIdStr;
  }


  public DetailedActivityDto averageSpeed(Float averageSpeed) {
    
    this.averageSpeed = averageSpeed;
    return this;
  }

   /**
   * The activity&#39;s average speed, in meters per second
   * @return averageSpeed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The activity's average speed, in meters per second")
  @JsonProperty(JSON_PROPERTY_AVERAGE_SPEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getAverageSpeed() {
    return averageSpeed;
  }


  public void setAverageSpeed(Float averageSpeed) {
    this.averageSpeed = averageSpeed;
  }


  public DetailedActivityDto maxSpeed(Float maxSpeed) {
    
    this.maxSpeed = maxSpeed;
    return this;
  }

   /**
   * The activity&#39;s max speed, in meters per second
   * @return maxSpeed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The activity's max speed, in meters per second")
  @JsonProperty(JSON_PROPERTY_MAX_SPEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getMaxSpeed() {
    return maxSpeed;
  }


  public void setMaxSpeed(Float maxSpeed) {
    this.maxSpeed = maxSpeed;
  }


  public DetailedActivityDto hasKudoed(Boolean hasKudoed) {
    
    this.hasKudoed = hasKudoed;
    return this;
  }

   /**
   * Whether the logged-in athlete has kudoed this activity
   * @return hasKudoed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the logged-in athlete has kudoed this activity")
  @JsonProperty(JSON_PROPERTY_HAS_KUDOED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasKudoed() {
    return hasKudoed;
  }


  public void setHasKudoed(Boolean hasKudoed) {
    this.hasKudoed = hasKudoed;
  }


  public DetailedActivityDto hideFromHome(Boolean hideFromHome) {
    
    this.hideFromHome = hideFromHome;
    return this;
  }

   /**
   * Whether the activity is muted
   * @return hideFromHome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the activity is muted")
  @JsonProperty(JSON_PROPERTY_HIDE_FROM_HOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHideFromHome() {
    return hideFromHome;
  }


  public void setHideFromHome(Boolean hideFromHome) {
    this.hideFromHome = hideFromHome;
  }


  public DetailedActivityDto gearId(String gearId) {
    
    this.gearId = gearId;
    return this;
  }

   /**
   * The id of the gear for the activity
   * @return gearId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the gear for the activity")
  @JsonProperty(JSON_PROPERTY_GEAR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGearId() {
    return gearId;
  }


  public void setGearId(String gearId) {
    this.gearId = gearId;
  }


  public DetailedActivityDto kilojoules(Float kilojoules) {
    
    this.kilojoules = kilojoules;
    return this;
  }

   /**
   * The total work done in kilojoules during this activity. Rides only
   * @return kilojoules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total work done in kilojoules during this activity. Rides only")
  @JsonProperty(JSON_PROPERTY_KILOJOULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getKilojoules() {
    return kilojoules;
  }


  public void setKilojoules(Float kilojoules) {
    this.kilojoules = kilojoules;
  }


  public DetailedActivityDto averageWatts(Float averageWatts) {
    
    this.averageWatts = averageWatts;
    return this;
  }

   /**
   * Average power output in watts during this activity. Rides only
   * @return averageWatts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Average power output in watts during this activity. Rides only")
  @JsonProperty(JSON_PROPERTY_AVERAGE_WATTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getAverageWatts() {
    return averageWatts;
  }


  public void setAverageWatts(Float averageWatts) {
    this.averageWatts = averageWatts;
  }


  public DetailedActivityDto deviceWatts(Boolean deviceWatts) {
    
    this.deviceWatts = deviceWatts;
    return this;
  }

   /**
   * Whether the watts are from a power meter, false if estimated
   * @return deviceWatts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the watts are from a power meter, false if estimated")
  @JsonProperty(JSON_PROPERTY_DEVICE_WATTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeviceWatts() {
    return deviceWatts;
  }


  public void setDeviceWatts(Boolean deviceWatts) {
    this.deviceWatts = deviceWatts;
  }


  public DetailedActivityDto maxWatts(Integer maxWatts) {
    
    this.maxWatts = maxWatts;
    return this;
  }

   /**
   * Rides with power meter data only
   * @return maxWatts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Rides with power meter data only")
  @JsonProperty(JSON_PROPERTY_MAX_WATTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxWatts() {
    return maxWatts;
  }


  public void setMaxWatts(Integer maxWatts) {
    this.maxWatts = maxWatts;
  }


  public DetailedActivityDto weightedAverageWatts(Integer weightedAverageWatts) {
    
    this.weightedAverageWatts = weightedAverageWatts;
    return this;
  }

   /**
   * Similar to Normalized Power. Rides with power meter data only
   * @return weightedAverageWatts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Similar to Normalized Power. Rides with power meter data only")
  @JsonProperty(JSON_PROPERTY_WEIGHTED_AVERAGE_WATTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWeightedAverageWatts() {
    return weightedAverageWatts;
  }


  public void setWeightedAverageWatts(Integer weightedAverageWatts) {
    this.weightedAverageWatts = weightedAverageWatts;
  }


  public DetailedActivityDto description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the activity
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the activity")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public DetailedActivityDto photos(PhotosSummaryDto photos) {
    
    this.photos = photos;
    return this;
  }

   /**
   * Get photos
   * @return photos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PHOTOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PhotosSummaryDto getPhotos() {
    return photos;
  }


  public void setPhotos(PhotosSummaryDto photos) {
    this.photos = photos;
  }


  public DetailedActivityDto gear(SummaryGearDto gear) {
    
    this.gear = gear;
    return this;
  }

   /**
   * Get gear
   * @return gear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SummaryGearDto getGear() {
    return gear;
  }


  public void setGear(SummaryGearDto gear) {
    this.gear = gear;
  }


  public DetailedActivityDto calories(Float calories) {
    
    this.calories = calories;
    return this;
  }

   /**
   * The number of kilocalories consumed during this activity
   * @return calories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of kilocalories consumed during this activity")
  @JsonProperty(JSON_PROPERTY_CALORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getCalories() {
    return calories;
  }


  public void setCalories(Float calories) {
    this.calories = calories;
  }


  public DetailedActivityDto segmentEfforts(List<DetailedSegmentEffortDto> segmentEfforts) {
    
    this.segmentEfforts = segmentEfforts;
    return this;
  }

  public DetailedActivityDto addSegmentEffortsItem(DetailedSegmentEffortDto segmentEffortsItem) {
    if (this.segmentEfforts == null) {
      this.segmentEfforts = new ArrayList<>();
    }
    this.segmentEfforts.add(segmentEffortsItem);
    return this;
  }

   /**
   * Get segmentEfforts
   * @return segmentEfforts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SEGMENT_EFFORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DetailedSegmentEffortDto> getSegmentEfforts() {
    return segmentEfforts;
  }


  public void setSegmentEfforts(List<DetailedSegmentEffortDto> segmentEfforts) {
    this.segmentEfforts = segmentEfforts;
  }


  public DetailedActivityDto deviceName(String deviceName) {
    
    this.deviceName = deviceName;
    return this;
  }

   /**
   * The name of the device used to record the activity
   * @return deviceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the device used to record the activity")
  @JsonProperty(JSON_PROPERTY_DEVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeviceName() {
    return deviceName;
  }


  public void setDeviceName(String deviceName) {
    this.deviceName = deviceName;
  }


  public DetailedActivityDto embedToken(String embedToken) {
    
    this.embedToken = embedToken;
    return this;
  }

   /**
   * The token used to embed a Strava activity
   * @return embedToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The token used to embed a Strava activity")
  @JsonProperty(JSON_PROPERTY_EMBED_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmbedToken() {
    return embedToken;
  }


  public void setEmbedToken(String embedToken) {
    this.embedToken = embedToken;
  }


  public DetailedActivityDto splitsMetric(List<SplitDto> splitsMetric) {
    
    this.splitsMetric = splitsMetric;
    return this;
  }

  public DetailedActivityDto addSplitsMetricItem(SplitDto splitsMetricItem) {
    if (this.splitsMetric == null) {
      this.splitsMetric = new ArrayList<>();
    }
    this.splitsMetric.add(splitsMetricItem);
    return this;
  }

   /**
   * The splits of this activity in metric units (for runs)
   * @return splitsMetric
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The splits of this activity in metric units (for runs)")
  @JsonProperty(JSON_PROPERTY_SPLITS_METRIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SplitDto> getSplitsMetric() {
    return splitsMetric;
  }


  public void setSplitsMetric(List<SplitDto> splitsMetric) {
    this.splitsMetric = splitsMetric;
  }


  public DetailedActivityDto splitsStandard(List<SplitDto> splitsStandard) {
    
    this.splitsStandard = splitsStandard;
    return this;
  }

  public DetailedActivityDto addSplitsStandardItem(SplitDto splitsStandardItem) {
    if (this.splitsStandard == null) {
      this.splitsStandard = new ArrayList<>();
    }
    this.splitsStandard.add(splitsStandardItem);
    return this;
  }

   /**
   * The splits of this activity in imperial units (for runs)
   * @return splitsStandard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The splits of this activity in imperial units (for runs)")
  @JsonProperty(JSON_PROPERTY_SPLITS_STANDARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SplitDto> getSplitsStandard() {
    return splitsStandard;
  }


  public void setSplitsStandard(List<SplitDto> splitsStandard) {
    this.splitsStandard = splitsStandard;
  }


  public DetailedActivityDto laps(List<LapDto> laps) {
    
    this.laps = laps;
    return this;
  }

  public DetailedActivityDto addLapsItem(LapDto lapsItem) {
    if (this.laps == null) {
      this.laps = new ArrayList<>();
    }
    this.laps.add(lapsItem);
    return this;
  }

   /**
   * Get laps
   * @return laps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LAPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LapDto> getLaps() {
    return laps;
  }


  public void setLaps(List<LapDto> laps) {
    this.laps = laps;
  }


  public DetailedActivityDto bestEfforts(List<DetailedSegmentEffortDto> bestEfforts) {
    
    this.bestEfforts = bestEfforts;
    return this;
  }

  public DetailedActivityDto addBestEffortsItem(DetailedSegmentEffortDto bestEffortsItem) {
    if (this.bestEfforts == null) {
      this.bestEfforts = new ArrayList<>();
    }
    this.bestEfforts.add(bestEffortsItem);
    return this;
  }

   /**
   * Get bestEfforts
   * @return bestEfforts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BEST_EFFORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DetailedSegmentEffortDto> getBestEfforts() {
    return bestEfforts;
  }


  public void setBestEfforts(List<DetailedSegmentEffortDto> bestEfforts) {
    this.bestEfforts = bestEfforts;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetailedActivityDto detailedActivity = (DetailedActivityDto) o;
    return Objects.equals(this.id, detailedActivity.id) &&
        Objects.equals(this.externalId, detailedActivity.externalId) &&
        Objects.equals(this.uploadId, detailedActivity.uploadId) &&
        Objects.equals(this.athlete, detailedActivity.athlete) &&
        Objects.equals(this.name, detailedActivity.name) &&
        Objects.equals(this.distance, detailedActivity.distance) &&
        Objects.equals(this.movingTime, detailedActivity.movingTime) &&
        Objects.equals(this.elapsedTime, detailedActivity.elapsedTime) &&
        Objects.equals(this.totalElevationGain, detailedActivity.totalElevationGain) &&
        Objects.equals(this.elevHigh, detailedActivity.elevHigh) &&
        Objects.equals(this.elevLow, detailedActivity.elevLow) &&
        Objects.equals(this.type, detailedActivity.type) &&
        Objects.equals(this.startDate, detailedActivity.startDate) &&
        Objects.equals(this.startDateLocal, detailedActivity.startDateLocal) &&
        Objects.equals(this.timezone, detailedActivity.timezone) &&
        Objects.equals(this.startLatlng, detailedActivity.startLatlng) &&
        Objects.equals(this.endLatlng, detailedActivity.endLatlng) &&
        Objects.equals(this.achievementCount, detailedActivity.achievementCount) &&
        Objects.equals(this.kudosCount, detailedActivity.kudosCount) &&
        Objects.equals(this.commentCount, detailedActivity.commentCount) &&
        Objects.equals(this.athleteCount, detailedActivity.athleteCount) &&
        Objects.equals(this.photoCount, detailedActivity.photoCount) &&
        Objects.equals(this.totalPhotoCount, detailedActivity.totalPhotoCount) &&
        Objects.equals(this.map, detailedActivity.map) &&
        Objects.equals(this.trainer, detailedActivity.trainer) &&
        Objects.equals(this.commute, detailedActivity.commute) &&
        Objects.equals(this.manual, detailedActivity.manual) &&
        Objects.equals(this._private, detailedActivity._private) &&
        Objects.equals(this.flagged, detailedActivity.flagged) &&
        Objects.equals(this.workoutType, detailedActivity.workoutType) &&
        Objects.equals(this.uploadIdStr, detailedActivity.uploadIdStr) &&
        Objects.equals(this.averageSpeed, detailedActivity.averageSpeed) &&
        Objects.equals(this.maxSpeed, detailedActivity.maxSpeed) &&
        Objects.equals(this.hasKudoed, detailedActivity.hasKudoed) &&
        Objects.equals(this.hideFromHome, detailedActivity.hideFromHome) &&
        Objects.equals(this.gearId, detailedActivity.gearId) &&
        Objects.equals(this.kilojoules, detailedActivity.kilojoules) &&
        Objects.equals(this.averageWatts, detailedActivity.averageWatts) &&
        Objects.equals(this.deviceWatts, detailedActivity.deviceWatts) &&
        Objects.equals(this.maxWatts, detailedActivity.maxWatts) &&
        Objects.equals(this.weightedAverageWatts, detailedActivity.weightedAverageWatts) &&
        Objects.equals(this.description, detailedActivity.description) &&
        Objects.equals(this.photos, detailedActivity.photos) &&
        Objects.equals(this.gear, detailedActivity.gear) &&
        Objects.equals(this.calories, detailedActivity.calories) &&
        Objects.equals(this.segmentEfforts, detailedActivity.segmentEfforts) &&
        Objects.equals(this.deviceName, detailedActivity.deviceName) &&
        Objects.equals(this.embedToken, detailedActivity.embedToken) &&
        Objects.equals(this.splitsMetric, detailedActivity.splitsMetric) &&
        Objects.equals(this.splitsStandard, detailedActivity.splitsStandard) &&
        Objects.equals(this.laps, detailedActivity.laps) &&
        Objects.equals(this.bestEfforts, detailedActivity.bestEfforts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, externalId, uploadId, athlete, name, distance, movingTime, elapsedTime, totalElevationGain, elevHigh, elevLow, type, startDate, startDateLocal, timezone, startLatlng, endLatlng, achievementCount, kudosCount, commentCount, athleteCount, photoCount, totalPhotoCount, map, trainer, commute, manual, _private, flagged, workoutType, uploadIdStr, averageSpeed, maxSpeed, hasKudoed, hideFromHome, gearId, kilojoules, averageWatts, deviceWatts, maxWatts, weightedAverageWatts, description, photos, gear, calories, segmentEfforts, deviceName, embedToken, splitsMetric, splitsStandard, laps, bestEfforts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetailedActivityDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    uploadId: ").append(toIndentedString(uploadId)).append("\n");
    sb.append("    athlete: ").append(toIndentedString(athlete)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    movingTime: ").append(toIndentedString(movingTime)).append("\n");
    sb.append("    elapsedTime: ").append(toIndentedString(elapsedTime)).append("\n");
    sb.append("    totalElevationGain: ").append(toIndentedString(totalElevationGain)).append("\n");
    sb.append("    elevHigh: ").append(toIndentedString(elevHigh)).append("\n");
    sb.append("    elevLow: ").append(toIndentedString(elevLow)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    startDateLocal: ").append(toIndentedString(startDateLocal)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    startLatlng: ").append(toIndentedString(startLatlng)).append("\n");
    sb.append("    endLatlng: ").append(toIndentedString(endLatlng)).append("\n");
    sb.append("    achievementCount: ").append(toIndentedString(achievementCount)).append("\n");
    sb.append("    kudosCount: ").append(toIndentedString(kudosCount)).append("\n");
    sb.append("    commentCount: ").append(toIndentedString(commentCount)).append("\n");
    sb.append("    athleteCount: ").append(toIndentedString(athleteCount)).append("\n");
    sb.append("    photoCount: ").append(toIndentedString(photoCount)).append("\n");
    sb.append("    totalPhotoCount: ").append(toIndentedString(totalPhotoCount)).append("\n");
    sb.append("    map: ").append(toIndentedString(map)).append("\n");
    sb.append("    trainer: ").append(toIndentedString(trainer)).append("\n");
    sb.append("    commute: ").append(toIndentedString(commute)).append("\n");
    sb.append("    manual: ").append(toIndentedString(manual)).append("\n");
    sb.append("    _private: ").append(toIndentedString(_private)).append("\n");
    sb.append("    flagged: ").append(toIndentedString(flagged)).append("\n");
    sb.append("    workoutType: ").append(toIndentedString(workoutType)).append("\n");
    sb.append("    uploadIdStr: ").append(toIndentedString(uploadIdStr)).append("\n");
    sb.append("    averageSpeed: ").append(toIndentedString(averageSpeed)).append("\n");
    sb.append("    maxSpeed: ").append(toIndentedString(maxSpeed)).append("\n");
    sb.append("    hasKudoed: ").append(toIndentedString(hasKudoed)).append("\n");
    sb.append("    hideFromHome: ").append(toIndentedString(hideFromHome)).append("\n");
    sb.append("    gearId: ").append(toIndentedString(gearId)).append("\n");
    sb.append("    kilojoules: ").append(toIndentedString(kilojoules)).append("\n");
    sb.append("    averageWatts: ").append(toIndentedString(averageWatts)).append("\n");
    sb.append("    deviceWatts: ").append(toIndentedString(deviceWatts)).append("\n");
    sb.append("    maxWatts: ").append(toIndentedString(maxWatts)).append("\n");
    sb.append("    weightedAverageWatts: ").append(toIndentedString(weightedAverageWatts)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    photos: ").append(toIndentedString(photos)).append("\n");
    sb.append("    gear: ").append(toIndentedString(gear)).append("\n");
    sb.append("    calories: ").append(toIndentedString(calories)).append("\n");
    sb.append("    segmentEfforts: ").append(toIndentedString(segmentEfforts)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    embedToken: ").append(toIndentedString(embedToken)).append("\n");
    sb.append("    splitsMetric: ").append(toIndentedString(splitsMetric)).append("\n");
    sb.append("    splitsStandard: ").append(toIndentedString(splitsStandard)).append("\n");
    sb.append("    laps: ").append(toIndentedString(laps)).append("\n");
    sb.append("    bestEfforts: ").append(toIndentedString(bestEfforts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

