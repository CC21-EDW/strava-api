/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baloise.open.strava.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.baloise.open.strava.client.model.AltitudeStreamDto;
import com.baloise.open.strava.client.model.CadenceStreamDto;
import com.baloise.open.strava.client.model.DistanceStreamDto;
import com.baloise.open.strava.client.model.HeartrateStreamDto;
import com.baloise.open.strava.client.model.LatLngStreamDto;
import com.baloise.open.strava.client.model.MovingStreamDto;
import com.baloise.open.strava.client.model.PowerStreamDto;
import com.baloise.open.strava.client.model.SmoothGradeStreamDto;
import com.baloise.open.strava.client.model.SmoothVelocityStreamDto;
import com.baloise.open.strava.client.model.TemperatureStreamDto;
import com.baloise.open.strava.client.model.TimeStreamDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * StreamSetDto
 */
@JsonPropertyOrder({
  StreamSetDto.JSON_PROPERTY_TIME,
  StreamSetDto.JSON_PROPERTY_DISTANCE,
  StreamSetDto.JSON_PROPERTY_LATLNG,
  StreamSetDto.JSON_PROPERTY_ALTITUDE,
  StreamSetDto.JSON_PROPERTY_VELOCITY_SMOOTH,
  StreamSetDto.JSON_PROPERTY_HEARTRATE,
  StreamSetDto.JSON_PROPERTY_CADENCE,
  StreamSetDto.JSON_PROPERTY_WATTS,
  StreamSetDto.JSON_PROPERTY_TEMP,
  StreamSetDto.JSON_PROPERTY_MOVING,
  StreamSetDto.JSON_PROPERTY_GRADE_SMOOTH
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-01T17:50:53.245687+01:00[Europe/Zurich]")
public class StreamSetDto {
  public static final String JSON_PROPERTY_TIME = "time";
  private TimeStreamDto time = null;

  public static final String JSON_PROPERTY_DISTANCE = "distance";
  private DistanceStreamDto distance = null;

  public static final String JSON_PROPERTY_LATLNG = "latlng";
  private LatLngStreamDto latlng = null;

  public static final String JSON_PROPERTY_ALTITUDE = "altitude";
  private AltitudeStreamDto altitude = null;

  public static final String JSON_PROPERTY_VELOCITY_SMOOTH = "velocity_smooth";
  private SmoothVelocityStreamDto velocitySmooth = null;

  public static final String JSON_PROPERTY_HEARTRATE = "heartrate";
  private HeartrateStreamDto heartrate = null;

  public static final String JSON_PROPERTY_CADENCE = "cadence";
  private CadenceStreamDto cadence = null;

  public static final String JSON_PROPERTY_WATTS = "watts";
  private PowerStreamDto watts = null;

  public static final String JSON_PROPERTY_TEMP = "temp";
  private TemperatureStreamDto temp = null;

  public static final String JSON_PROPERTY_MOVING = "moving";
  private MovingStreamDto moving = null;

  public static final String JSON_PROPERTY_GRADE_SMOOTH = "grade_smooth";
  private SmoothGradeStreamDto gradeSmooth = null;


  public StreamSetDto time(TimeStreamDto time) {
    
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TimeStreamDto getTime() {
    return time;
  }


  public void setTime(TimeStreamDto time) {
    this.time = time;
  }


  public StreamSetDto distance(DistanceStreamDto distance) {
    
    this.distance = distance;
    return this;
  }

   /**
   * Get distance
   * @return distance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DistanceStreamDto getDistance() {
    return distance;
  }


  public void setDistance(DistanceStreamDto distance) {
    this.distance = distance;
  }


  public StreamSetDto latlng(LatLngStreamDto latlng) {
    
    this.latlng = latlng;
    return this;
  }

   /**
   * Get latlng
   * @return latlng
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LATLNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LatLngStreamDto getLatlng() {
    return latlng;
  }


  public void setLatlng(LatLngStreamDto latlng) {
    this.latlng = latlng;
  }


  public StreamSetDto altitude(AltitudeStreamDto altitude) {
    
    this.altitude = altitude;
    return this;
  }

   /**
   * Get altitude
   * @return altitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ALTITUDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AltitudeStreamDto getAltitude() {
    return altitude;
  }


  public void setAltitude(AltitudeStreamDto altitude) {
    this.altitude = altitude;
  }


  public StreamSetDto velocitySmooth(SmoothVelocityStreamDto velocitySmooth) {
    
    this.velocitySmooth = velocitySmooth;
    return this;
  }

   /**
   * Get velocitySmooth
   * @return velocitySmooth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VELOCITY_SMOOTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SmoothVelocityStreamDto getVelocitySmooth() {
    return velocitySmooth;
  }


  public void setVelocitySmooth(SmoothVelocityStreamDto velocitySmooth) {
    this.velocitySmooth = velocitySmooth;
  }


  public StreamSetDto heartrate(HeartrateStreamDto heartrate) {
    
    this.heartrate = heartrate;
    return this;
  }

   /**
   * Get heartrate
   * @return heartrate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HEARTRATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HeartrateStreamDto getHeartrate() {
    return heartrate;
  }


  public void setHeartrate(HeartrateStreamDto heartrate) {
    this.heartrate = heartrate;
  }


  public StreamSetDto cadence(CadenceStreamDto cadence) {
    
    this.cadence = cadence;
    return this;
  }

   /**
   * Get cadence
   * @return cadence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CADENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CadenceStreamDto getCadence() {
    return cadence;
  }


  public void setCadence(CadenceStreamDto cadence) {
    this.cadence = cadence;
  }


  public StreamSetDto watts(PowerStreamDto watts) {
    
    this.watts = watts;
    return this;
  }

   /**
   * Get watts
   * @return watts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WATTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PowerStreamDto getWatts() {
    return watts;
  }


  public void setWatts(PowerStreamDto watts) {
    this.watts = watts;
  }


  public StreamSetDto temp(TemperatureStreamDto temp) {
    
    this.temp = temp;
    return this;
  }

   /**
   * Get temp
   * @return temp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TEMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TemperatureStreamDto getTemp() {
    return temp;
  }


  public void setTemp(TemperatureStreamDto temp) {
    this.temp = temp;
  }


  public StreamSetDto moving(MovingStreamDto moving) {
    
    this.moving = moving;
    return this;
  }

   /**
   * Get moving
   * @return moving
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MOVING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MovingStreamDto getMoving() {
    return moving;
  }


  public void setMoving(MovingStreamDto moving) {
    this.moving = moving;
  }


  public StreamSetDto gradeSmooth(SmoothGradeStreamDto gradeSmooth) {
    
    this.gradeSmooth = gradeSmooth;
    return this;
  }

   /**
   * Get gradeSmooth
   * @return gradeSmooth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GRADE_SMOOTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SmoothGradeStreamDto getGradeSmooth() {
    return gradeSmooth;
  }


  public void setGradeSmooth(SmoothGradeStreamDto gradeSmooth) {
    this.gradeSmooth = gradeSmooth;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StreamSetDto streamSet = (StreamSetDto) o;
    return Objects.equals(this.time, streamSet.time) &&
        Objects.equals(this.distance, streamSet.distance) &&
        Objects.equals(this.latlng, streamSet.latlng) &&
        Objects.equals(this.altitude, streamSet.altitude) &&
        Objects.equals(this.velocitySmooth, streamSet.velocitySmooth) &&
        Objects.equals(this.heartrate, streamSet.heartrate) &&
        Objects.equals(this.cadence, streamSet.cadence) &&
        Objects.equals(this.watts, streamSet.watts) &&
        Objects.equals(this.temp, streamSet.temp) &&
        Objects.equals(this.moving, streamSet.moving) &&
        Objects.equals(this.gradeSmooth, streamSet.gradeSmooth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(time, distance, latlng, altitude, velocitySmooth, heartrate, cadence, watts, temp, moving, gradeSmooth);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StreamSetDto {\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    latlng: ").append(toIndentedString(latlng)).append("\n");
    sb.append("    altitude: ").append(toIndentedString(altitude)).append("\n");
    sb.append("    velocitySmooth: ").append(toIndentedString(velocitySmooth)).append("\n");
    sb.append("    heartrate: ").append(toIndentedString(heartrate)).append("\n");
    sb.append("    cadence: ").append(toIndentedString(cadence)).append("\n");
    sb.append("    watts: ").append(toIndentedString(watts)).append("\n");
    sb.append("    temp: ").append(toIndentedString(temp)).append("\n");
    sb.append("    moving: ").append(toIndentedString(moving)).append("\n");
    sb.append("    gradeSmooth: ").append(toIndentedString(gradeSmooth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

