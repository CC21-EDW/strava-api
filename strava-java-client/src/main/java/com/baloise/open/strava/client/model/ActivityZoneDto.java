/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baloise.open.strava.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.baloise.open.strava.client.model.TimedZoneRangeDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * ActivityZoneDto
 */
@JsonPropertyOrder({
  ActivityZoneDto.JSON_PROPERTY_SCORE,
  ActivityZoneDto.JSON_PROPERTY_DISTRIBUTION_BUCKETS,
  ActivityZoneDto.JSON_PROPERTY_TYPE,
  ActivityZoneDto.JSON_PROPERTY_SENSOR_BASED,
  ActivityZoneDto.JSON_PROPERTY_POINTS,
  ActivityZoneDto.JSON_PROPERTY_CUSTOM_ZONES,
  ActivityZoneDto.JSON_PROPERTY_MAX
})
@JsonTypeName("ActivityZone")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-30T10:08:10.913426500+01:00[Europe/Zurich]")
public class ActivityZoneDto {
  public static final String JSON_PROPERTY_SCORE = "score";
  private Integer score;

  public static final String JSON_PROPERTY_DISTRIBUTION_BUCKETS = "distribution_buckets";
  private List<TimedZoneRangeDto> distributionBuckets = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    HEARTRATE("heartrate"),
    
    POWER("power");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_SENSOR_BASED = "sensor_based";
  private Boolean sensorBased;

  public static final String JSON_PROPERTY_POINTS = "points";
  private Integer points;

  public static final String JSON_PROPERTY_CUSTOM_ZONES = "custom_zones";
  private Boolean customZones;

  public static final String JSON_PROPERTY_MAX = "max";
  private Integer max;


  public ActivityZoneDto score(Integer score) {
    
    this.score = score;
    return this;
  }

   /**
   * Get score
   * @return score
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getScore() {
    return score;
  }


  public void setScore(Integer score) {
    this.score = score;
  }


  public ActivityZoneDto distributionBuckets(List<TimedZoneRangeDto> distributionBuckets) {
    
    this.distributionBuckets = distributionBuckets;
    return this;
  }

  public ActivityZoneDto addDistributionBucketsItem(TimedZoneRangeDto distributionBucketsItem) {
    if (this.distributionBuckets == null) {
      this.distributionBuckets = new ArrayList<>();
    }
    this.distributionBuckets.add(distributionBucketsItem);
    return this;
  }

   /**
   * Stores the exclusive ranges representing zones and the time spent in each.
   * @return distributionBuckets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stores the exclusive ranges representing zones and the time spent in each.")
  @JsonProperty(JSON_PROPERTY_DISTRIBUTION_BUCKETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TimedZoneRangeDto> getDistributionBuckets() {
    return distributionBuckets;
  }


  public void setDistributionBuckets(List<TimedZoneRangeDto> distributionBuckets) {
    this.distributionBuckets = distributionBuckets;
  }


  public ActivityZoneDto type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ActivityZoneDto sensorBased(Boolean sensorBased) {
    
    this.sensorBased = sensorBased;
    return this;
  }

   /**
   * Get sensorBased
   * @return sensorBased
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SENSOR_BASED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSensorBased() {
    return sensorBased;
  }


  public void setSensorBased(Boolean sensorBased) {
    this.sensorBased = sensorBased;
  }


  public ActivityZoneDto points(Integer points) {
    
    this.points = points;
    return this;
  }

   /**
   * Get points
   * @return points
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_POINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPoints() {
    return points;
  }


  public void setPoints(Integer points) {
    this.points = points;
  }


  public ActivityZoneDto customZones(Boolean customZones) {
    
    this.customZones = customZones;
    return this;
  }

   /**
   * Get customZones
   * @return customZones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CUSTOM_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCustomZones() {
    return customZones;
  }


  public void setCustomZones(Boolean customZones) {
    this.customZones = customZones;
  }


  public ActivityZoneDto max(Integer max) {
    
    this.max = max;
    return this;
  }

   /**
   * Get max
   * @return max
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMax() {
    return max;
  }


  public void setMax(Integer max) {
    this.max = max;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivityZoneDto activityZone = (ActivityZoneDto) o;
    return Objects.equals(this.score, activityZone.score) &&
        Objects.equals(this.distributionBuckets, activityZone.distributionBuckets) &&
        Objects.equals(this.type, activityZone.type) &&
        Objects.equals(this.sensorBased, activityZone.sensorBased) &&
        Objects.equals(this.points, activityZone.points) &&
        Objects.equals(this.customZones, activityZone.customZones) &&
        Objects.equals(this.max, activityZone.max);
  }

  @Override
  public int hashCode() {
    return Objects.hash(score, distributionBuckets, type, sensorBased, points, customZones, max);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivityZoneDto {\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    distributionBuckets: ").append(toIndentedString(distributionBuckets)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    sensorBased: ").append(toIndentedString(sensorBased)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    customZones: ").append(toIndentedString(customZones)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

