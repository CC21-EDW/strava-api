/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baloise.open.strava.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.baloise.open.strava.client.model.DetailedSegmentEffortDto;
import com.baloise.open.strava.client.model.LapDto;
import com.baloise.open.strava.client.model.PhotosSummaryDto;
import com.baloise.open.strava.client.model.SplitDto;
import com.baloise.open.strava.client.model.SummaryGearDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * DetailedActivityAllOfDto
 */
@JsonPropertyOrder({
  DetailedActivityAllOfDto.JSON_PROPERTY_DESCRIPTION,
  DetailedActivityAllOfDto.JSON_PROPERTY_PHOTOS,
  DetailedActivityAllOfDto.JSON_PROPERTY_GEAR,
  DetailedActivityAllOfDto.JSON_PROPERTY_CALORIES,
  DetailedActivityAllOfDto.JSON_PROPERTY_SEGMENT_EFFORTS,
  DetailedActivityAllOfDto.JSON_PROPERTY_DEVICE_NAME,
  DetailedActivityAllOfDto.JSON_PROPERTY_EMBED_TOKEN,
  DetailedActivityAllOfDto.JSON_PROPERTY_SPLITS_METRIC,
  DetailedActivityAllOfDto.JSON_PROPERTY_SPLITS_STANDARD,
  DetailedActivityAllOfDto.JSON_PROPERTY_LAPS,
  DetailedActivityAllOfDto.JSON_PROPERTY_BEST_EFFORTS
})
@JsonTypeName("DetailedActivity_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-30T09:50:39.653673500+01:00[Europe/Zurich]")
public class DetailedActivityAllOfDto {
  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_PHOTOS = "photos";
  private PhotosSummaryDto photos;

  public static final String JSON_PROPERTY_GEAR = "gear";
  private SummaryGearDto gear;

  public static final String JSON_PROPERTY_CALORIES = "calories";
  private Float calories;

  public static final String JSON_PROPERTY_SEGMENT_EFFORTS = "segment_efforts";
  private List<DetailedSegmentEffortDto> segmentEfforts = null;

  public static final String JSON_PROPERTY_DEVICE_NAME = "device_name";
  private String deviceName;

  public static final String JSON_PROPERTY_EMBED_TOKEN = "embed_token";
  private String embedToken;

  public static final String JSON_PROPERTY_SPLITS_METRIC = "splits_metric";
  private List<SplitDto> splitsMetric = null;

  public static final String JSON_PROPERTY_SPLITS_STANDARD = "splits_standard";
  private List<SplitDto> splitsStandard = null;

  public static final String JSON_PROPERTY_LAPS = "laps";
  private List<LapDto> laps = null;

  public static final String JSON_PROPERTY_BEST_EFFORTS = "best_efforts";
  private List<DetailedSegmentEffortDto> bestEfforts = null;


  public DetailedActivityAllOfDto description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the activity
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the activity")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public DetailedActivityAllOfDto photos(PhotosSummaryDto photos) {
    
    this.photos = photos;
    return this;
  }

   /**
   * Get photos
   * @return photos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PHOTOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PhotosSummaryDto getPhotos() {
    return photos;
  }


  public void setPhotos(PhotosSummaryDto photos) {
    this.photos = photos;
  }


  public DetailedActivityAllOfDto gear(SummaryGearDto gear) {
    
    this.gear = gear;
    return this;
  }

   /**
   * Get gear
   * @return gear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SummaryGearDto getGear() {
    return gear;
  }


  public void setGear(SummaryGearDto gear) {
    this.gear = gear;
  }


  public DetailedActivityAllOfDto calories(Float calories) {
    
    this.calories = calories;
    return this;
  }

   /**
   * The number of kilocalories consumed during this activity
   * @return calories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of kilocalories consumed during this activity")
  @JsonProperty(JSON_PROPERTY_CALORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getCalories() {
    return calories;
  }


  public void setCalories(Float calories) {
    this.calories = calories;
  }


  public DetailedActivityAllOfDto segmentEfforts(List<DetailedSegmentEffortDto> segmentEfforts) {
    
    this.segmentEfforts = segmentEfforts;
    return this;
  }

  public DetailedActivityAllOfDto addSegmentEffortsItem(DetailedSegmentEffortDto segmentEffortsItem) {
    if (this.segmentEfforts == null) {
      this.segmentEfforts = new ArrayList<>();
    }
    this.segmentEfforts.add(segmentEffortsItem);
    return this;
  }

   /**
   * Get segmentEfforts
   * @return segmentEfforts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SEGMENT_EFFORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DetailedSegmentEffortDto> getSegmentEfforts() {
    return segmentEfforts;
  }


  public void setSegmentEfforts(List<DetailedSegmentEffortDto> segmentEfforts) {
    this.segmentEfforts = segmentEfforts;
  }


  public DetailedActivityAllOfDto deviceName(String deviceName) {
    
    this.deviceName = deviceName;
    return this;
  }

   /**
   * The name of the device used to record the activity
   * @return deviceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the device used to record the activity")
  @JsonProperty(JSON_PROPERTY_DEVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeviceName() {
    return deviceName;
  }


  public void setDeviceName(String deviceName) {
    this.deviceName = deviceName;
  }


  public DetailedActivityAllOfDto embedToken(String embedToken) {
    
    this.embedToken = embedToken;
    return this;
  }

   /**
   * The token used to embed a Strava activity
   * @return embedToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The token used to embed a Strava activity")
  @JsonProperty(JSON_PROPERTY_EMBED_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmbedToken() {
    return embedToken;
  }


  public void setEmbedToken(String embedToken) {
    this.embedToken = embedToken;
  }


  public DetailedActivityAllOfDto splitsMetric(List<SplitDto> splitsMetric) {
    
    this.splitsMetric = splitsMetric;
    return this;
  }

  public DetailedActivityAllOfDto addSplitsMetricItem(SplitDto splitsMetricItem) {
    if (this.splitsMetric == null) {
      this.splitsMetric = new ArrayList<>();
    }
    this.splitsMetric.add(splitsMetricItem);
    return this;
  }

   /**
   * The splits of this activity in metric units (for runs)
   * @return splitsMetric
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The splits of this activity in metric units (for runs)")
  @JsonProperty(JSON_PROPERTY_SPLITS_METRIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SplitDto> getSplitsMetric() {
    return splitsMetric;
  }


  public void setSplitsMetric(List<SplitDto> splitsMetric) {
    this.splitsMetric = splitsMetric;
  }


  public DetailedActivityAllOfDto splitsStandard(List<SplitDto> splitsStandard) {
    
    this.splitsStandard = splitsStandard;
    return this;
  }

  public DetailedActivityAllOfDto addSplitsStandardItem(SplitDto splitsStandardItem) {
    if (this.splitsStandard == null) {
      this.splitsStandard = new ArrayList<>();
    }
    this.splitsStandard.add(splitsStandardItem);
    return this;
  }

   /**
   * The splits of this activity in imperial units (for runs)
   * @return splitsStandard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The splits of this activity in imperial units (for runs)")
  @JsonProperty(JSON_PROPERTY_SPLITS_STANDARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SplitDto> getSplitsStandard() {
    return splitsStandard;
  }


  public void setSplitsStandard(List<SplitDto> splitsStandard) {
    this.splitsStandard = splitsStandard;
  }


  public DetailedActivityAllOfDto laps(List<LapDto> laps) {
    
    this.laps = laps;
    return this;
  }

  public DetailedActivityAllOfDto addLapsItem(LapDto lapsItem) {
    if (this.laps == null) {
      this.laps = new ArrayList<>();
    }
    this.laps.add(lapsItem);
    return this;
  }

   /**
   * Get laps
   * @return laps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LAPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LapDto> getLaps() {
    return laps;
  }


  public void setLaps(List<LapDto> laps) {
    this.laps = laps;
  }


  public DetailedActivityAllOfDto bestEfforts(List<DetailedSegmentEffortDto> bestEfforts) {
    
    this.bestEfforts = bestEfforts;
    return this;
  }

  public DetailedActivityAllOfDto addBestEffortsItem(DetailedSegmentEffortDto bestEffortsItem) {
    if (this.bestEfforts == null) {
      this.bestEfforts = new ArrayList<>();
    }
    this.bestEfforts.add(bestEffortsItem);
    return this;
  }

   /**
   * Get bestEfforts
   * @return bestEfforts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BEST_EFFORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DetailedSegmentEffortDto> getBestEfforts() {
    return bestEfforts;
  }


  public void setBestEfforts(List<DetailedSegmentEffortDto> bestEfforts) {
    this.bestEfforts = bestEfforts;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetailedActivityAllOfDto detailedActivityAllOf = (DetailedActivityAllOfDto) o;
    return Objects.equals(this.description, detailedActivityAllOf.description) &&
        Objects.equals(this.photos, detailedActivityAllOf.photos) &&
        Objects.equals(this.gear, detailedActivityAllOf.gear) &&
        Objects.equals(this.calories, detailedActivityAllOf.calories) &&
        Objects.equals(this.segmentEfforts, detailedActivityAllOf.segmentEfforts) &&
        Objects.equals(this.deviceName, detailedActivityAllOf.deviceName) &&
        Objects.equals(this.embedToken, detailedActivityAllOf.embedToken) &&
        Objects.equals(this.splitsMetric, detailedActivityAllOf.splitsMetric) &&
        Objects.equals(this.splitsStandard, detailedActivityAllOf.splitsStandard) &&
        Objects.equals(this.laps, detailedActivityAllOf.laps) &&
        Objects.equals(this.bestEfforts, detailedActivityAllOf.bestEfforts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, photos, gear, calories, segmentEfforts, deviceName, embedToken, splitsMetric, splitsStandard, laps, bestEfforts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetailedActivityAllOfDto {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    photos: ").append(toIndentedString(photos)).append("\n");
    sb.append("    gear: ").append(toIndentedString(gear)).append("\n");
    sb.append("    calories: ").append(toIndentedString(calories)).append("\n");
    sb.append("    segmentEfforts: ").append(toIndentedString(segmentEfforts)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    embedToken: ").append(toIndentedString(embedToken)).append("\n");
    sb.append("    splitsMetric: ").append(toIndentedString(splitsMetric)).append("\n");
    sb.append("    splitsStandard: ").append(toIndentedString(splitsStandard)).append("\n");
    sb.append("    laps: ").append(toIndentedString(laps)).append("\n");
    sb.append("    bestEfforts: ").append(toIndentedString(bestEfforts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

